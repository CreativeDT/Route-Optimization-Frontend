function App() {
  const navigate = useNavigate();
  const { logout } = useContext(AuthContext);
  const timeoutRef = useRef(null);

  useEffect(() => {
    const handleSessionTimeout = () => {
      logout();
      navigate("/sessionexpired");
    };

    const resetTimer = () => {
      if (timeoutRef.current) clearTimeout(timeoutRef.current);
      timeoutRef.current = setTimeout(handleSessionTimeout, 5 * 60 * 1000);
    };

    window.addEventListener("mousemove", resetTimer);
    window.addEventListener("keydown", resetTimer);

    resetTimer();

    return () => {
      clearTimeout(timeoutRef.current);
      window.removeEventListener("mousemove", resetTimer);
      window.removeEventListener("keydown", resetTimer);
    };
  }, [logout, navigate]);

  return (
    <Routes>
      {/* your routes */}
    </Routes>
  );
}
